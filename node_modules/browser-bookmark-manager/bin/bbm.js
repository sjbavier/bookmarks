#!/usr/bin/env node
'use strict';

var _commander = require('commander');

var _commander2 = _interopRequireDefault(_commander);

var _inquirer = require('inquirer');

var _inquirer2 = _interopRequireDefault(_inquirer);

var _index = require('../browser-plugins/index');

var plugins = _interopRequireWildcard(_index);

var _package = require('../package.json');

var _chalk = require('chalk');

var _chalk2 = _interopRequireDefault(_chalk);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

_commander2.default.version(_package.version).usage('[options] <searchterm ..>').option('-b, --browser [browsername]', 'specified type of browser [chrome]', 'chrome').option('-p, --profile [profilename]', 'name of browsers user profile', 'Default').parse(process.argv);

_commander2.default.browser = _commander2.default.browser.toLowerCase();
const browserClass = plugins.browserNames[_commander2.default.browser];

// Exit if an invalid browser was chosen
if (browserClass === undefined) {
  errorExit(`'${ _commander2.default.browser }' is not a valid browser name. Valid browsernames are "firefox", "chrome"`);
}

const currentPlugin = new plugins[browserClass]();
const searchTerms = _commander2.default.args;

// Perform the search for the actual bookmarks
let results;
try {
  results = currentPlugin.search(searchTerms[0], _commander2.default.profile);
} catch (err) {
  errorExit(err.toString());
}

_inquirer2.default.prompt([{
  type: 'list',
  name: 'url',
  message: `Which bookmark do you want to open?`,
  choices: results
}]).then(function (answer) {
  currentPlugin.open(answer.url);
  console.log(`Opening ${ answer.url }`);
});

function errorExit(message) {
  const error = _chalk2.default.bold.red;
  console.log(error(message));
  process.exit(0);
}